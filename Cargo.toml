[package]
name = "ncursesw"
version = "0.6.0"
authors = [ "Steve Whittle <narfit66@googlemail.com>" ]
edition = "2018"
description = "A fat wrapper around the NCurses TUI library"
homepage = "https://lib.rs/crates/ncursesw"
repository = "https://github.com/narfit66/ncursesw-rs"
documentation = "https://docs.rs/ncursesw"
readme = "README.md"
keywords = [ "ncurses", "TUI" ]
categories = [ "api-bindings", "external-ffi-bindings", "command-line-interface" ]
license = "MIT"
build = "build.rs"

[badges]
travis-ci = { repository = "narfit66/ncursesw-rs", branch = "master" }
maintenance = { status = "actively-developed" }
is-it-maintained-issue-resolution = { repository = "narfit66/ncursesw-rs" }
is-it-maintained-open-issues = { repository = "narfit66/ncursesw-rs" }

[dependencies]
libc = "0.2"
errno = "0.2"
custom_error = "1.7"
ascii = "1.0"
semver = "0.9"
lazy_static = "1.4"

[dev-dependencies]
gettext-rs = "0.4"

[build-dependencies]
pkg-config = "0.3"
bindgen = "0.53"

[features]
# conditional compulation of KEY_RESIZE to return as a NCurseswError::KeyResize (the default) for getch(), mvgetch(),
# mvwgetch(), wgetch(), get_wch(), mvget_wch(), mvwget_wch() and wget_wch().
key_resize_as_error = []
# conditional compulation of KEY_EVENT to return as a NCurseswError::KeyEvent (the default) for getch(), mvgetch(),
# mvwgetch(), wgetch(), get_wch(), mvget_wch(), mvwget_wch() and wget_wch().
key_event_as_error = []
docs-rs = []

[package.metadata.docs.rs]
features = [ "docs-rs" ] # This feature will be enabled during the docs.rs build.

[lib]
name = "ncursesw"
